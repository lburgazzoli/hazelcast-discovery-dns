// *****************************************************************************
//
// *****************************************************************************

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
    }
}


plugins {
    id 'java'
    id 'groovy'
    id 'maven'
    id 'idea'
    id 'osgi'
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'net.researchgate.release' version '2.4.0'
}

apply plugin: 'io.codearte.nexus-staging'

// *****************************************************************************
//
// *****************************************************************************

group   = 'com.github.lburgazzoli'

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
    isCiBuild        = System.getenv('CI_TRAVIS') != null
    gitRoot          = "https://github.com/lburgazzoli"
    gitProject       = "https://github.com/lburgazzoli/hazelcast-discovery-dns"
    gitURI           = "git@github.com/lburgazzoli/hazelcast-discovery-dns.git"

    ext {
        versions = [
            slf4j     : '1.7.21',
            hazelcast : '3.7.2',
            junit     : '4.12'
        ]
    }

    bundleImportPackages = [
        '*'
    ]

    bundleExportPackages = [
        "*"
    ]

    if (isCiBuild && isReleaseVersion) {
        // This will fail for release versions
        nexusUsername = ""
        nexusPassword = ""
    } else if(!project.hasProperty('nexusUsername') && !project.hasProperty('nexusPassword')) {
        nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
        nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
    }
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

// *************************************************************************
//
// *************************************************************************

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

// *************************************************************************
//
// *************************************************************************

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile("org.slf4j:slf4j-api:$versions.slf4j") { transitive = false }
    runtime("org.slf4j:slf4j-ext:$versions.slf4j") { transitive = false }

    compile "com.hazelcast:hazelcast:$versions.hazelcast"

    testCompile("org.slf4j:slf4j-simple:$versions.slf4j") { transitive = false }
    testCompile "junit:junit:$versions.junit"
}

test {
    testLogging {
        events          'started', 'passed', 'skipped', 'failed', 'standardOut', 'standardError' 
        exceptionFormat 'full'
    }
}

[compileJava, compileTestJava]*.options*.compilerArgs = [
    "-Xlint:unchecked",
    "-Xlint:deprecation",
]

// *************************************************************************
//
// *************************************************************************

jar {
    baseName = "${project.name}"

    manifest {
        attributes['Bundle-Description'     ] = "${project.name}"
        attributes['Bundle-Name'            ] = "${project.name}"
        attributes['Bundle-SymbolicName'    ] = "${project.group}-${project.name}"
        attributes['Bundle-Version'         ] = project.version.replaceAll('-','.')
        attributes['Implementation-Title'   ] = "${project.group}-${project.name}-${project.version}"
        attributes['Implementation-Version' ] = project.version
        attributes['Implementation-Vendor'  ] = 'Luca Burgazzoli'

        instruction 'Import-Package' , bundleImportPackages.join(',')
        instruction 'Export-Package' , bundleExportPackages.join(',')
    }
}

// *************************************************************************
//
// *************************************************************************

nexus {
    sign = project.isReleaseVersion && !project.isCiBuild
}

extraArchive {
    javadoc = true
    sources = true
    tests   = false
}

modifyPom {
    project {
        name          = "${project.name}"
        description   = "${project.name}"
        url           = "${project.gitProject}"
        packaging     = 'jar'

        licenses {
            license {
                name         = "The Apache Software License, Version 2.0"
                url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "repo"
            }
        }

        scm {
            url                 = "${project.gitProject}"
            connection          = "scm:git:${project.gitProject}"
            developerConnection = "scm:git:${project.gitProject}"
        }

        developers {
            developer {
                id 'lburgazzoli'
                name 'Luca Burgazzoli'
                url gitRoot
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

afterReleaseBuild.dependsOn uploadArchives
//closeAndPromoteRepository.dependsOn uploadArchives

task promote(dependsOn: closeAndPromoteRepository) {
    println "Release"
}
